### YamlMime:ManagedReference
items:
- uid: AVM.ClientGenerator.Core.IntegerExtensions
  commentId: T:AVM.ClientGenerator.Core.IntegerExtensions
  id: IntegerExtensions
  parent: AVM.ClientGenerator.Core
  children:
  - AVM.ClientGenerator.Core.IntegerExtensions.BigPow(System.UInt64,System.UInt64)
  - AVM.ClientGenerator.Core.IntegerExtensions.BitLen(System.UInt64)
  - AVM.ClientGenerator.Core.IntegerExtensions.Pow(System.UInt64,System.UInt64)
  - AVM.ClientGenerator.Core.IntegerExtensions.Sqrt(System.UInt64)
  - AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Byte)
  - AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int16)
  - AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int32)
  - AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int64)
  - AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.SByte)
  - AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt16)
  - AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt32)
  - AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt64)
  langs:
  - csharp
  - vb
  name: IntegerExtensions
  nameWithType: IntegerExtensions
  fullName: AVM.ClientGenerator.Core.IntegerExtensions
  type: Class
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: IntegerExtensions
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 9
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static class IntegerExtensions
    content.vb: Public Module IntegerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AVM.ClientGenerator.Core.IntegerExtensions.Pow(System.UInt64,System.UInt64)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.Pow(System.UInt64,System.UInt64)
  id: Pow(System.UInt64,System.UInt64)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: Pow(UInt64, UInt64)
  nameWithType: IntegerExtensions.Pow(UInt64, UInt64)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.Pow(System.UInt64, System.UInt64)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Pow
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 17
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  summary: "\nInteger extensions.\n"
  example: []
  syntax:
    content: public static ulong Pow(this ulong a, ulong b)
    parameters:
    - id: a
      type: System.UInt64
      description: ''
    - id: b
      type: System.UInt64
    return:
      type: System.UInt64
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Pow(a As ULong, b As ULong) As ULong
  overload: AVM.ClientGenerator.Core.IntegerExtensions.Pow*
  exceptions:
  - type: AVM.ClientGenerator.Core.IntentionallyNotImplementedException
    commentId: T:AVM.ClientGenerator.Core.IntentionallyNotImplementedException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.BigPow(System.UInt64,System.UInt64)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.BigPow(System.UInt64,System.UInt64)
  id: BigPow(System.UInt64,System.UInt64)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: BigPow(UInt64, UInt64)
  nameWithType: IntegerExtensions.BigPow(UInt64, UInt64)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.BigPow(System.UInt64, System.UInt64)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BigPow
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 19
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static BigInteger BigPow(this ulong a, ulong b)
    parameters:
    - id: a
      type: System.UInt64
    - id: b
      type: System.UInt64
    return:
      type: System.Numerics.BigInteger
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BigPow(a As ULong, b As ULong) As BigInteger
  overload: AVM.ClientGenerator.Core.IntegerExtensions.BigPow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.Sqrt(System.UInt64)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.Sqrt(System.UInt64)
  id: Sqrt(System.UInt64)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: Sqrt(UInt64)
  nameWithType: IntegerExtensions.Sqrt(UInt64)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.Sqrt(System.UInt64)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Sqrt
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 21
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static ulong Sqrt(this ulong a)
    parameters:
    - id: a
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Sqrt(a As ULong) As ULong
  overload: AVM.ClientGenerator.Core.IntegerExtensions.Sqrt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.BitLen(System.UInt64)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.BitLen(System.UInt64)
  id: BitLen(System.UInt64)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: BitLen(UInt64)
  nameWithType: IntegerExtensions.BitLen(UInt64)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.BitLen(System.UInt64)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BitLen
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 23
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static int BitLen(this ulong a)
    parameters:
    - id: a
      type: System.UInt64
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BitLen(a As ULong) As Integer
  overload: AVM.ClientGenerator.Core.IntegerExtensions.BitLen*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt64)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt64)
  id: ToTealBytes(System.UInt64)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: ToTealBytes(UInt64)
  nameWithType: IntegerExtensions.ToTealBytes(UInt64)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt64)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ToTealBytes
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 25
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static byte[] ToTealBytes(this ulong a)
    parameters:
    - id: a
      type: System.UInt64
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTealBytes(a As ULong) As Byte()
  overload: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int64)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int64)
  id: ToTealBytes(System.Int64)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: ToTealBytes(Int64)
  nameWithType: IntegerExtensions.ToTealBytes(Int64)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int64)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ToTealBytes
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 26
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static byte[] ToTealBytes(this long a)
    parameters:
    - id: a
      type: System.Int64
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTealBytes(a As Long) As Byte()
  overload: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt32)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt32)
  id: ToTealBytes(System.UInt32)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: ToTealBytes(UInt32)
  nameWithType: IntegerExtensions.ToTealBytes(UInt32)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt32)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ToTealBytes
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 27
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static byte[] ToTealBytes(this uint a)
    parameters:
    - id: a
      type: System.UInt32
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTealBytes(a As UInteger) As Byte()
  overload: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int32)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int32)
  id: ToTealBytes(System.Int32)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: ToTealBytes(Int32)
  nameWithType: IntegerExtensions.ToTealBytes(Int32)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int32)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ToTealBytes
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 28
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static byte[] ToTealBytes(this int a)
    parameters:
    - id: a
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTealBytes(a As Integer) As Byte()
  overload: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt16)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt16)
  id: ToTealBytes(System.UInt16)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: ToTealBytes(UInt16)
  nameWithType: IntegerExtensions.ToTealBytes(UInt16)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.UInt16)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ToTealBytes
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 29
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static byte[] ToTealBytes(this ushort a)
    parameters:
    - id: a
      type: System.UInt16
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTealBytes(a As UShort) As Byte()
  overload: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int16)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int16)
  id: ToTealBytes(System.Int16)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: ToTealBytes(Int16)
  nameWithType: IntegerExtensions.ToTealBytes(Int16)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Int16)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ToTealBytes
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 30
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static byte[] ToTealBytes(this short a)
    parameters:
    - id: a
      type: System.Int16
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTealBytes(a As Short) As Byte()
  overload: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Byte)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Byte)
  id: ToTealBytes(System.Byte)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: ToTealBytes(Byte)
  nameWithType: IntegerExtensions.ToTealBytes(Byte)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.Byte)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ToTealBytes
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 31
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static byte[] ToTealBytes(this byte a)
    parameters:
    - id: a
      type: System.Byte
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTealBytes(a As Byte) As Byte()
  overload: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.SByte)
  commentId: M:AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.SByte)
  id: ToTealBytes(System.SByte)
  isExtensionMethod: true
  parent: AVM.ClientGenerator.Core.IntegerExtensions
  langs:
  - csharp
  - vb
  name: ToTealBytes(SByte)
  nameWithType: IntegerExtensions.ToTealBytes(SByte)
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes(System.SByte)
  type: Method
  source:
    remote:
      path: AVM.ClientGenerator.Core/IntegerExtensions.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ToTealBytes
    path: ../../AVM.ClientGenerator/AVM.ClientGenerator.Core/IntegerExtensions.cs
    startLine: 32
  assemblies:
  - AVM.ClientGenerator - Backup.Core
  namespace: AVM.ClientGenerator.Core
  syntax:
    content: public static byte[] ToTealBytes(this sbyte a)
    parameters:
    - id: a
      type: System.SByte
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTealBytes(a As SByte) As Byte()
  overload: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AVM.ClientGenerator.Core
  commentId: N:AVM.ClientGenerator.Core
  name: AVM.ClientGenerator.Core
  nameWithType: AVM.ClientGenerator.Core
  fullName: AVM.ClientGenerator.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AVM.ClientGenerator.Core.IntentionallyNotImplementedException
  commentId: T:AVM.ClientGenerator.Core.IntentionallyNotImplementedException
  name: IntentionallyNotImplementedException
  nameWithType: IntentionallyNotImplementedException
  fullName: AVM.ClientGenerator.Core.IntentionallyNotImplementedException
- uid: AVM.ClientGenerator.Core.IntegerExtensions.Pow*
  commentId: Overload:AVM.ClientGenerator.Core.IntegerExtensions.Pow
  name: Pow
  nameWithType: IntegerExtensions.Pow
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.Pow
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: AVM.ClientGenerator.Core.IntegerExtensions.BigPow*
  commentId: Overload:AVM.ClientGenerator.Core.IntegerExtensions.BigPow
  name: BigPow
  nameWithType: IntegerExtensions.BigPow
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.BigPow
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: AVM.ClientGenerator.Core.IntegerExtensions.Sqrt*
  commentId: Overload:AVM.ClientGenerator.Core.IntegerExtensions.Sqrt
  name: Sqrt
  nameWithType: IntegerExtensions.Sqrt
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.Sqrt
- uid: AVM.ClientGenerator.Core.IntegerExtensions.BitLen*
  commentId: Overload:AVM.ClientGenerator.Core.IntegerExtensions.BitLen
  name: BitLen
  nameWithType: IntegerExtensions.BitLen
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.BitLen
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes*
  commentId: Overload:AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes
  name: ToTealBytes
  nameWithType: IntegerExtensions.ToTealBytes
  fullName: AVM.ClientGenerator.Core.IntegerExtensions.ToTealBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
